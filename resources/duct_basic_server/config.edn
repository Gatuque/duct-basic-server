{:duct.profile/base
 {:duct.core/project-ns duct-basic-server

  :duct.database.sql/hikaricp
  {:jdbc-url #duct/env ["DATABASE_URL"]}

  [:duct.migrator.ragtime/resources :duct-sever-common/migrations]
  {:path "migrations"}
  [:duct.migrator.ragtime/resources :duct-server-migrations/runtime]
  {:path #duct/env ["RUNTIME_MIGRATIONS" :or "dev_migrations"]}
  :duct.migrator/ragtime
  {:migrations       [#ig/ref :duct-sever-common/migrations
                      #ig/ref :duct-server-migrations/runtime]
   :logger            #ig/ref :duct/logger
   :database          #ig/ref :duct.database/sql
   :migrations-table  "duct_server_migrations"
   :strategy         :apply-new}

  :duct-basic-server.boundary.db/bind-db-connection
  {:db #ig/ref :duct.database.sql/hikaricp}

  :duct.logger/timbre {:level :debug
                       :appenders {:duct.logger.timbre/spit #ig/ref :duct.logger.timbre/spit
                                   :duct.logger.timbre/brief #ig/ref :duct.logger.timbre/brief}}
  :duct.logger.timbre/spit
  {:fname #duct/env ["LOGS_FILE_PATH" :or "logs/dev.log"]}

  :duct.logger.timbre/brief
  {:min-level :report}

  :duct-basic-server.router/reitit
  {:env #ig/ref :duct.core/environment
   :routes [["/api"
             {:swagger {:tags ["Duct Basic Server API"]}}

             ["/users"
              {:get {:summary "Get all users"
                     :handler (fn [req]
                                {:status 200
                                 :body "ok"})}

               :post {:summary "Create a new user"
                      :parameters {:body [:map
                                          [:first_name :string]
                                          [:last_name :string]
                                          [:email
                                           [:re #ig/ref :duct-basic-server.model/email-model]]
                                          [:admin {:default false} :boolean]
                                          [:pass :string]]}
                      :handler #ig/ref :duct-basic-server.handler.core/create-user}}]

             ["/users/:id"
              {:get {:summary "Get user by ID"
                     :parameters {:path [:map
                                         [:id :int]]}
                     :handler (fn [req]
                                {:status 200
                                 :body "ok"})}

               :put {:summary "Update a user by the ID"
                     :parameters {:path [:map
                                         [:id :int]]}
                     :handler (fn [req]
                                {:status 200
                                 :body "ok"})}

               :delete {:summary "Delete a user by the ID"
                        :parameters {:path [:map
                                            [:id :int]]}
                        :handler (fn [req]
                                   {:status 200
                                    :body "ok"})}}]]]}

  :duct.server.http/jetty
  {:handler #ig/ref :duct-basic-server.router/reitit
   :host    #duct/env "SERVER_HOST"
   :port    #duct/env [ "SERVER_PORT" Int :or 3000]
   :ssl?    #duct/env [ "SERVER_SSL" Bool :or false]
   :logger  #ig/ref :duct/logger}

  :duct-basic-server.handler.core/create-user
  {}
  :duct-basic-server.model/email-model
  {}

  }

 :duct.profile/dev   #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/prod  {}

 :duct.module/logging {}
 :duct.module.web/api
 {}}
